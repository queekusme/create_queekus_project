import * as mongoose from "mongoose";

import { Logger } from "../";

interface IDatabaseConnectCredentials
{
    username: string;
    password: string;
}

interface IDatabaseConnectOpts
{
    auth?: IDatabaseConnectCredentials
    host: string;
    database: string;
}

// eslint-disable-next-line @typescript-eslint/no-explicit-any
export type MongoDocument = mongoose.Document<any, any, unknown>;

export async function init(connectOpts: IDatabaseConnectOpts): Promise<void>
{
    const authPass: string = connectOpts.auth?.password !== undefined ? `:${connectOpts.auth.password}` : "";
    const auth: string = connectOpts.auth !== undefined ? `${connectOpts.auth.username}${authPass}@` : "";

    const dbURI: string = `mongodb://${auth}${connectOpts.host}/${connectOpts.database}`;
    Logger.debug(`Connecting to MongoDB via: ${dbURI}`);

    try
    {
        await mongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true, autoCreate: true });
        Logger.info(`Connected to MongoDB at ${connectOpts.host}`);
    }
    catch(e)
    {
        Logger.error(`Failed to connect to MongoDB: ${e.message}`);
        process.exit(1);
    }
}